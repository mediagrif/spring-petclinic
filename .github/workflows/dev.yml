name: "Push to Development Environment"
on:
  push:
    branches:
      - master
jobs:
  build:
    name: "Docker Build"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: "Login to Amazon ECR"
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: "Build, Tag and Push Image to Amazon ECR"
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: petclinic
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$(basename $GITHUB_REF)-${GITHUB_SHA:0:8} .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$(basename $GITHUB_REF)-${GITHUB_SHA:0:8}
      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
  kubernetes:
    name: "Kubernetes Deployment"
    needs: build # require job to wait for 'build' to complete
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: "Login to Amazon ECR"
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: "Setup Python"
        uses: actions/setup-python@v1
        with:
          python-version: 3.x
          architecture: x64
      - name: "Setup AWS cli"
        run: |
          pip install awscli
      - name: "Setup Kubectl"
        run: |
          sudo curl --silent --location -o /usr/local/bin/kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.14.6/2019-08-22/bin/linux/amd64/kubectl
          sudo chmod +x /usr/local/bin/kubectl
      - name: "Resolve Parameter" # Replace placeholders with actual values
        id: resolve
        run: |
          cd ./kubernetes/
          # use '|' as a delimiter to avoid conflicts with values containing '/'
          sed -i "s|%role_arn%|${{ secrets.ROLE_ARN }}|g" service-account.yaml
          sed -i "s|%image%|${{ steps.login-ecr.outputs.registry }}/petclinic:$(basename $GITHUB_REF)-${GITHUB_SHA:0:8}|g" deployment.yaml
      - name: "Deploy"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
        run: |
          aws eks update-kubeconfig --name ${{ secrets.KUBE_CLUSTER }} --region us-east-1
          kubectl apply -f kubernetes/service-account.yaml -n petclinic
          kubectl apply -f kubernetes/deployment.yaml -n petclinic